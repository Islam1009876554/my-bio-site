document.addEventListener('DOMContentLoaded', function() {
    // –ú–∞—Å—Å–∏–≤ —Å –ø—É—Ç—è–º–∏ –∫ —Ñ–æ–Ω–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    const backgrounds = [
        'images/Beautiful place in Evade.jpeg',
        'images/—Ñ–æ–Ω evade —á–µ—Ç—ã—Ä–µ —É–≥–ª–∞ –∫–∞—Ä—Ç–∞.jpeg',
        'images/Evade üå±üåµ.jpeg',
        'images/nothing _p.jpeg'
    ];

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ñ–æ–Ω–æ–≤
    backgrounds.forEach((bgPath, index) => {
        const img = document.createElement('img');
        img.src = bgPath;
        img.className = `background-image ${index === 0 ? 'active' : ''}`;
        document.body.insertBefore(img, document.body.firstChild);
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã —Ñ–æ–Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const backgroundElements = document.querySelectorAll('.background-image');
    let currentBg = 0;

    function changeBackground() {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        backgroundElements.forEach(bg => bg.classList.remove('active'));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        backgroundElements[currentBg].classList.add('active');
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        currentBg = (currentBg + 1) % backgroundElements.length;
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–º–µ–Ω—É —Ñ–æ–Ω–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    setInterval(changeBackground, 5000);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Ñ–æ–Ω —Å—Ä–∞–∑—É
    changeBackground();

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    backgroundElements.forEach(img => {
        img.addEventListener('load', function() {
            console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', this.src);
        });
        
        img.addEventListener('error', function() {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', this.src);
        });
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const robloxSkin = document.querySelector('.roblox-skin');
    
    if (robloxSkin) {
        robloxSkin.addEventListener('load', function() {
            console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
        });
        
        robloxSkin.addEventListener('error', function() {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            console.log('–ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é:', this.src);
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
    function isElementInViewport(el) {
        const rect = el.getBoundingClientRect();
        return (
            rect.top <= (window.innerHeight || document.documentElement.clientHeight) * 0.85 &&
            rect.bottom >= 0
        );
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    function handleScroll() {
        const profileSection = document.querySelector('.profile-section');
        if (profileSection && isElementInViewport(profileSection)) {
            requestAnimationFrame(() => {
                profileSection.classList.add('visible');
            });
            // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
            window.removeEventListener('scroll', handleScroll);
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    window.addEventListener('scroll', handleScroll);
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    handleScroll();

    const loadingScreen = document.querySelector('.loading-screen');
    const siteContent = document.querySelector('.site-content');
    
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∏–¥–µ–Ω
    siteContent.style.display = 'block';
    
    // –°—Ä–∞–∑—É —Å–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–∞–π—Ç–∞
    siteContent.style.opacity = '0';
    siteContent.style.visibility = 'hidden';
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    loadingScreen.innerHTML = `
        <div class="loading-content">
            <div class="loading-gif-container">
                <img src="GIF/RobloxPlayerBeta_a1riT2YajD.gif" alt="Loading" class="loading-gif">
                <div class="cyber-lines"></div>
            </div>
            <div class="loading-text">Initializing System</div>
            <div class="progress-container">
                <div class="progress-bar">
                    <div class="progress-glow"></div>
                </div>
            </div>
            <div class="cyber-particles"></div>
        </div>
    `;

    // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã
    const particlesContainer = document.querySelector('.cyber-particles');
    for(let i = 0; i < 50; i++) {
        createParticle();
    }

    function createParticle() {
        const particle = document.createElement('div');
        particle.className = 'particle';
        resetParticle(particle);
        particlesContainer.appendChild(particle);
    }

    function resetParticle(particle) {
        particle.style.left = Math.random() * 100 + '%';
        particle.style.top = Math.random() * 100 + '%';
        particle.style.opacity = 0;
        particle.style.transform = 'translateY(0)';
        
        requestAnimationFrame(() => {
            particle.style.transition = 'opacity 1s ease, transform 1s ease';
            particle.style.opacity = Math.random() * 0.5 + 0.5;
            particle.style.transform = `translateY(${-Math.random() * 50}px)`;
        });

        setTimeout(() => {
            if (particle.parentElement) {
                resetParticle(particle);
            }
        }, Math.random() * 3000 + 1000);
    }

    const loadingText = document.querySelector('.loading-text');
    const messages = [
        "‚åñ System Boot ‚åñ",
        "‚åñ Loading Assets ‚åñ",
        "‚åñ Initializing World ‚åñ",
        "‚åñ Almost Ready ‚åñ"
    ];
    
    let messageIndex = 0;
    const textInterval = setInterval(() => {
        loadingText.style.opacity = 0;
        setTimeout(() => {
            loadingText.textContent = messages[messageIndex];
            loadingText.style.opacity = 1;
            messageIndex = (messageIndex + 1) % messages.length;
        }, 200);
    }, 2000);

    setTimeout(() => {
        clearInterval(textInterval);
        loadingScreen.classList.add('fade-out');
        setTimeout(() => {
            loadingScreen.remove();
        }, 500);
    }, 3000);
});
