document.addEventListener('DOMContentLoaded', function() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    const navToggle = document.querySelector('.nav-toggle');
    const navMenu = document.querySelector('.nav-menu');
    const navLinks = document.querySelectorAll('.nav-link');

    // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
    navToggle.addEventListener('click', function() {
        navToggle.classList.toggle('active');
        navMenu.classList.toggle('active');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
    navLinks.forEach(link => {
        link.addEventListener('click', function() {
            navToggle.classList.remove('active');
            navMenu.classList.remove('active');
        });
    });

    // –ê–∫—Ç–∏–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    window.addEventListener('scroll', function() {
        let current = '';
        const sections = document.querySelectorAll('section, [id]');
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop - 100;
            if (pageYOffset >= sectionTop) {
                current = section.getAttribute('id');
            }
        });

        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === '#' + current) {
                link.classList.add('active');
            }
        });
    });

    // –°–∫—Ä—ã—Ç–∏–µ/–ø–æ–∫–∞–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    let lastScrollTop = 0;
    const nav = document.querySelector('.cyber-nav');
    
    window.addEventListener('scroll', function() {
        let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrollTop > lastScrollTop && scrollTop > 100) {
            nav.style.transform = 'translateY(-100%)';
        } else {
            nav.style.transform = 'translateY(0)';
        }
        lastScrollTop = scrollTop;
    });

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ GIF –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const lazyImages = document.querySelectorAll('img[loading="lazy"]');
    
    // –°–æ–∑–¥–∞–µ–º Intersection Observer –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.classList.add('loaded');
                observer.unobserve(img);
            }
        });
    }, {
        threshold: 0.1,
        rootMargin: '50px'
    });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ –ª–µ–Ω–∏–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    lazyImages.forEach(img => {
        imageObserver.observe(img);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
        img.addEventListener('load', function() {
            this.style.opacity = '1';
        });
    });
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö GIF –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(() => {
        const criticalGifs = [
            'GIF/ezgif.com-animated-gif-maker.gif',
            'GIF/picmix.com_2069612.gif',
            'GIF/picmix.com_2448415.gif'
        ];
        
        criticalGifs.forEach(src => {
            const img = new Image();
            img.src = src;
        });
    }, 1000);

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–≤–µ–∑–¥ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç DOM
    const starsContainer = document.createDocumentFragment();
    const maxStars = 25; // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ —Å 50 –¥–æ 25
    for(let i = 0; i < maxStars; i++) {
        const star = document.createElement('div');
        star.className = 'star';
        star.style.left = Math.random() * 100 + 'vw';
        star.style.top = Math.random() * 100 + 'vh';
        star.style.animationDelay = Math.random() * 2 + 's';
        starsContainer.appendChild(star);
    }
    document.body.appendChild(starsContainer);

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–ª–∞–≤–∞—é—â–∏—Ö —ç–º–æ–¥–∑–∏ - —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Å–Ω–∏–∂–∞–µ–º —á–∞—Å—Ç–æ—Ç—É –ø–æ—è–≤–ª–µ–Ω–∏—è
    const emojis = ['‚ú®', 'üí´', 'üåü', '‚≠ê', 'üéÆ', 'üíù', 'üå∏', 'üéÄ'];
    const emojiContainer = document.createElement('div');
    emojiContainer.className = 'emoji-container';
    document.body.appendChild(emojiContainer);
    
    function createFloatingEmoji() {
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 10 —ç–º–æ–¥–∑–∏ –≤–º–µ—Å—Ç–æ 20
        if (document.querySelectorAll('.floating-emoji').length > 10) return;
        
        const emoji = document.createElement('div');
        emoji.className = 'floating-emoji';
        emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];
        emoji.style.left = Math.random() * 100 + 'vw';
        emoji.style.animationDuration = 5 + Math.random() * 10 + 's';
        emojiContainer.appendChild(emoji);
        
        // –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ 10 —Å–µ–∫—É–Ω–¥ –≤–º–µ—Å—Ç–æ 15
        setTimeout(() => {
            emoji.remove();
        }, 10000);
    }

    // –£–º–µ–Ω—å—à–∞–µ–º —á–∞—Å—Ç–æ—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–æ–¥–∑–∏ —Å 5 –¥–æ 8 —Å–µ–∫—É–Ω–¥
    setInterval(createFloatingEmoji, 8000);

    // –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ–º –º–∞—Ç—Ä–∏—á–Ω—ã–π –¥–æ–∂–¥—å - —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç canvas –∏–∑ DOM
    const matrixCanvas = document.getElementById('matrix-rain');
    if (matrixCanvas) {
        matrixCanvas.remove();
    }

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤
    const hoverSound = new Audio('data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgA');
    hoverSound.volume = 0.1;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑–≤—É–∫–æ–≤ –≤–º–µ—Å—Ç–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π
    document.body.addEventListener('mouseenter', function(e) {
        if (e.target.matches('.cyber-button, .y2k-list li')) {
            hoverSound.currentTime = 0;
            hoverSound.play().catch(() => {});
        }
    }, true);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ glitch-image
    document.querySelectorAll('.roblox-skin').forEach(img => {
        img.parentElement.classList.add('glitch-image');
    });

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö"
    const scrollToTopBtn = document.getElementById('scrollToTop');
    
    window.addEventListener('scroll', function() {
        if (window.pageYOffset > 300) {
            scrollToTopBtn.classList.add('visible');
        } else {
            scrollToTopBtn.classList.remove('visible');
        }
    });

    scrollToTopBtn.addEventListener('click', function() {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });

    // –ü—Ä–µ–ª–æ–∞–¥–µ—Ä
    const preloader = document.getElementById('preloader');
    
    window.addEventListener('load', function() {
        setTimeout(() => {
            preloader.classList.add('hidden');
            setTimeout(() => {
                preloader.style.display = 'none';
            }, 500);
        }, 1000);
    });

    // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ - –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
                
                // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤
                if (entry.target.classList.contains('skills-section')) {
                    setTimeout(() => {
                        animateSkills();
                    }, 300);
                }
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å –∫–ª–∞—Å—Å–æ–º fade-in
    document.querySelectorAll('.fade-in, .bottom-section, .interest-item').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤
    function animateSkills() {
        const skillFills = document.querySelectorAll('.skill-fill');
        skillFills.forEach(fill => {
            const skillLevel = fill.getAttribute('data-skill');
            fill.style.width = skillLevel + '%';
        });
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    const effectsToggle = document.getElementById('effectsToggle');
    let effectsEnabled = localStorage.getItem('effects') !== 'false';
    
    effectsToggle.classList.toggle('active', effectsEnabled);
    
    effectsToggle.addEventListener('click', function() {
        effectsEnabled = !effectsEnabled;
        localStorage.setItem('effects', effectsEnabled);
        effectsToggle.classList.toggle('active', effectsEnabled);
        
        // –í–∫–ª—é—á–∞–µ–º/–≤—ã–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
        const animatedElements = document.querySelectorAll('.floating-emoji, .star, .skybox');
        animatedElements.forEach(el => {
            el.style.display = effectsEnabled ? 'block' : 'none';
        });
        
        // –í–∫–ª—é—á–∞–µ–º/–≤—ã–∫–ª—é—á–∞–µ–º CRT —ç—Ñ—Ñ–µ–∫—Ç
        const crtOverlay = document.querySelector('.crt-overlay');
        if (crtOverlay) {
            crtOverlay.style.opacity = effectsEnabled ? '0.1' : '0';
        }
    });
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    if (!effectsEnabled) {
        const animatedElements = document.querySelectorAll('.floating-emoji, .star, .skybox');
        animatedElements.forEach(el => {
            el.style.display = 'none';
        });
        
        const crtOverlay = document.querySelector('.crt-overlay');
        if (crtOverlay) {
            crtOverlay.style.opacity = '0';
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–Ω–æ–π –º–∞—à–∏–Ω–∫–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    function typeWriter(element, text, speed = 100) {
        let i = 0;
        element.innerHTML = '';
        
        function type() {
            if (i < text.length) {
                element.innerHTML += text.charAt(i);
                i++;
                setTimeout(type, speed);
            }
        }
        type();
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º—ã—à–∏ –∏ –ø–µ—á–∞—Ç–∞–Ω–∏—è
    function startWelcomeAnimation() {
        const virtualMouse = document.getElementById('virtualMouse');
        const welcomeText = document.getElementById('welcomeText');
        const typingCursor = document.getElementById('typingCursor');
        const typingLine = document.getElementById('typingLine');
        const clickEffect = document.getElementById('clickEffect');
        const originalText = '‚úß Welcome to My World ‚úß';
        const glitchChars = '!@#$%^&*()_+-=[]{}|;:,.<>?~`–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è1234567890';
        
        if (!virtualMouse) return; // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
        
        // –°–æ–∑–¥–∞–µ–º –∑–≤—É–∫ –ø–µ—á–∞—Ç–∞–Ω–∏—è
        const createTypingSound = () => {
            try {
                const audioContext = new (window.AudioContext || window.webkitAudioContext)();
                const oscillator = audioContext.createOscillator();
                const gainNode = audioContext.createGain();
                
                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);
                
                oscillator.frequency.setValueAtTime(800 + Math.random() * 200, audioContext.currentTime);
                gainNode.gain.setValueAtTime(0.05, audioContext.currentTime);
                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.1);
                
                oscillator.start(audioContext.currentTime);
                oscillator.stop(audioContext.currentTime + 0.1);
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–≤—É–∫–∞
            }
        };
        
        // –ó–≤—É–∫ –∫–ª–∏–∫–∞
        const createClickSound = () => {
            try {
                const audioContext = new (window.AudioContext || window.webkitAudioContext)();
                const oscillator = audioContext.createOscillator();
                const gainNode = audioContext.createGain();
                
                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);
                
                oscillator.frequency.setValueAtTime(1200, audioContext.currentTime);
                gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.05);
                
                oscillator.start(audioContext.currentTime);
                oscillator.stop(audioContext.currentTime + 0.05);
            } catch (e) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–≤—É–∫–∞
            }
        };
        
        // –≠—Ç–∞–ø 1: –ü–æ—è–≤–ª—è—é—Ç—Å—è –≥–ª–∏—Ç—á —Å–∏–º–≤–æ–ª—ã
        setTimeout(() => {
            typingLine.classList.add('visible');
            typingCursor.classList.add('visible');
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            function generateGlitchText() {
                let glitchText = '';
                for (let i = 0; i < originalText.length; i++) {
                    if (originalText[i] === ' ') {
                        glitchText += ' ';
                    } else {
                        glitchText += glitchChars[Math.floor(Math.random() * glitchChars.length)];
                    }
                }
                return glitchText;
            }
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≥–ª–∏—Ç—á–∞
            let glitchCount = 0;
            const maxGlitches = 8;
            
            function animateGlitch() {
                if (glitchCount < maxGlitches) {
                    welcomeText.textContent = generateGlitchText();
                    welcomeText.classList.add('glitch-effect');
                    createTypingSound();
                    glitchCount++;
                    setTimeout(animateGlitch, 200);
                } else {
                    // –ì–ª–∏—Ç—á –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –∂–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º—ã—à–∏
                    welcomeText.classList.remove('glitch-effect');
                }
            }
            
            animateGlitch();
        }, 800);
        
        // –≠—Ç–∞–ø 2: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º—ã—à—å –ø–æ—Å–ª–µ –≥–ª–∏—Ç—á–∞
        setTimeout(() => {
            virtualMouse.classList.add('moving');
        }, 2500);
        
        // –≠—Ç–∞–ø 3: –ú—ã—à—å –¥–æ–µ—Ö–∞–ª–∞, –¥–µ–ª–∞–µ–º –∫–ª–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
        setTimeout(() => {
            virtualMouse.classList.remove('moving');
            virtualMouse.classList.add('clicking');
            
            // –≠—Ñ—Ñ–µ–∫—Ç –∫–ª–∏–∫–∞
            clickEffect.classList.add('active');
            createClickSound();
            
            // –û—á–∏—â–∞–µ–º –≥–ª–∏—Ç—á —Ç–µ–∫—Å—Ç
            welcomeText.textContent = '';
            welcomeText.classList.remove('glitch-effect');
            
            setTimeout(() => {
                clickEffect.classList.remove('active');
                virtualMouse.classList.remove('clicking');
                virtualMouse.classList.add('typing');
            }, 400);
            
        }, 4500);
        
        // –≠—Ç–∞–ø 4: –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–µ—á–∞—Ç–∞–Ω–∏–µ
        setTimeout(() => {
            
            // –ü–µ—á–∞—Ç–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ –±—É–∫–≤–∞–º
            let i = 0;
            function typeChar() {
                if (i < originalText.length) {
                    welcomeText.textContent += originalText.charAt(i);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫ –ø–µ—á–∞—Ç–∞–Ω–∏—è
                    if (originalText.charAt(i).trim() !== '') {
                        createTypingSound();
                    }
                    
                    i++;
                    
                    // –£–º–µ—Ä–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∞–Ω–∏—è
                    let delay = 80;
                    if (originalText.charAt(i-1) === ' ') delay = 120;
                    if (originalText.charAt(i-1) === '‚úß') delay = 180;
                    
                    delay += Math.random() * 40; // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å
                    
                    setTimeout(typeChar, delay);
                } else {
                    // –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–µ—á–∞—Ç–∞–Ω–∏–µ
                    setTimeout(() => {
                        typingCursor.classList.remove('visible');
                        virtualMouse.classList.remove('typing');
                        virtualMouse.classList.add('disappearing');
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ –∫ —Ç–µ–∫—Å—Ç—É
                        welcomeText.classList.add('final-glow');
                        
                        // –£–±–∏—Ä–∞–µ–º –º—ã—à—å
                        setTimeout(() => {
                            virtualMouse.style.display = 'none';
                        }, 1500);
                    }, 1200);
                }
            }
            
            typeChar();
        }, 5000);
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(startWelcomeAnimation, 1000);
});